name: Build FFmpeg AAR (GPL Enabled, arm64-v8a)

on:
  workflow_dispatch: # Run manually from Actions tab

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      # 1️⃣ Checkout FFmpegKit
      - name: Checkout FFmpegKit
        run: |
          git clone --depth=1 https://github.com/arthenica/ffmpeg-kit.git
          cd ffmpeg-kit
          git submodule update --init --recursive

      # 2️⃣ Install dependencies
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y autoconf automake build-essential pkg-config \
            cmake yasm nasm python3 python3-pip unzip git wget texinfo \
            libtool libssl-dev zlib1g-dev

      # 3️⃣ Accept GPL license automatically
      - name: Set GPL License Acceptance
        run: |
          echo "export LICENSE_ACCEPTED=1" >> $GITHUB_ENV
          echo "export ANDROID_GPL_ENABLED=1" >> $GITHUB_ENV
          echo "export ANDROID_ABI=arm64-v8a" >> $GITHUB_ENV

      # 4️⃣ Build arm64-v8a with GPL codecs + modern external libs
      - name: Build FFmpeg AAR (GPL + External Libs)
        run: |
          cd ffmpeg-kit
          ./android.sh \
            --enable-gpl \
            --full \
            --disable-x86 \
            --disable-x86_64 \
            --disable-armeabi-v7a \
            --disable-arm-v7a-neon \
            --arch=arm64-v8a \
            --enable-x264 \
            --enable-x265 \
            --enable-libvpx \
            --enable-libopus \
            --enable-libvorbis \
            --enable-libwebp \
            --enable-libmp3lame \
            --enable-libass \
            --enable-fribidi \
            --enable-libaom \
            --disable-protocols \
            --disable-network

      # 5️⃣ Upload final AAR
      - name: Upload AAR
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-kit-gpl-arm64-v8a
          path: ffmpeg-kit/prebuilt/android/ffmpeg-kit-gpl-arm64-v8a.aar
